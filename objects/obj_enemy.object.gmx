<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_hasweight</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>follow = false;
washit = false;
stop = false;
rotate = false;
repel = false;
canrot = true;
dir = 0;
loot = -1;
alarm[0] = 1;
direction = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (skill+skp &lt; 65535) skill += skp;
else skill = 65535;
obj_player.alarm[1] = 1;
if (targeted == id) targeted = noone;
if (loot != -1) instance_create(x,y,loot);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canrot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if dead
stop = false;
if (chp &lt;= 0) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Recover from hit
if (targeted == id) targeted = noone;
washit = false;
image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Adjust stats
var maxweapon = max(weapon_level[1], weapon_level[2], weapon_level[3]);
lvl = clamp(lvl, maxweapon-2, maxweapon+2);
atk = clamp((atk + (lvl/2))&gt;&gt;0, 0, 20);
def = clamp((def + (lvl/2))&gt;&gt;0, 0, 20);
mhp += lvl;
spd = clamp((spd + (lvl/3))&gt;&gt;0, 1, 8);
rad += lvl&lt;&lt;1;
chp = mhp;
skp *= lvl;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (transition &gt; -1 || instance_exists(obj_blockmove) || cutscene || pause || stop || place_meeting(x, y, obj_conveyor)) {
    speed = 0;
    exit;
}

var playerfound = collision_line(x, y, obj_player.x, obj_player.y, obj_player, false, true);
var wallhit = collision_line(x, y, obj_player.x, obj_player.y, obj_solid, false, true);
var isblocked = !is_inside(x,y) || (place_meeting(x + dcos(direction)*speed, y - dsin(direction)*speed, obj_solid));
var playerreach = ((obj_player.x-section_x) &gt;= 24) &amp;&amp; ((section_x2-obj_player.x) &gt;= 24) &amp;&amp; ((obj_player.y-(section_y+48)) &gt;= 24) &amp;&amp; ((section_y2-obj_player.y) &gt;= 24);
var abletosee = playerfound!=noone &amp;&amp; playerreach &amp;&amp; distance_to_object(obj_player)&lt;=rad;

if (isblocked) {
    x = xprevious;
    y = yprevious;
    direction += 180;
} else if (repel /*&amp;&amp; abletosee*/) {
    if (keyboard_check_direct(vk_right) || gamepad_button_check(0, gp_padr)) {
        if (!place_meeting(x - spd, y, obj_solid)) x -= spd;
        else while(!place_meeting(x + 1, y, obj_solid)) --x;
    } else if (keyboard_check_direct(vk_left) || gamepad_button_check(0, gp_padl)) {
        if (!place_meeting(x + spd, y, obj_solid)) x += spd;
        else while(!place_meeting(x - 1, y, obj_solid)) ++x;
    }
    if (keyboard_check_direct(vk_down) || gamepad_button_check(0, gp_padd)) {
        if (!place_meeting(x, y - spd, obj_solid)) y -= spd;
        else while(!place_meeting(x, y + 1, obj_solid)) --y;
    } else if (keyboard_check_direct(vk_up) || gamepad_button_check(0, gp_padu)) {
        if (!place_meeting(x, y + spd, obj_solid)) y += spd;
        else while(!place_meeting(x, y - 1, obj_solid)) ++y;
    }
    speed = 0;
    /*var xd = sign(x - obj_player.x);
    var yd = sign(y - obj_player.y);
    var xdest = x + dcos(dir)*spd;
    var ydest = y - dsin(dir)*spd;
    if (place_meeting(xdest, ydest, obj_solid) || !is_inside(xdest,ydest)) {
        if (!place_meeting(x+dcos(dir+90)*spd,y-dsin(dir+90)*spd,obj_solid)) dir = (dir + 90) % 360;
        else dir = (dir + 270) % 360;
    } else {
        x = xdest;
        y = ydest;
        if (
            ((dir == 0 || dir == 180) &amp;&amp; (xd != dcos(dir)) &amp;&amp; place_meeting(x-xd*rad,y,obj_solid) &amp;&amp; !place_meeting(x+xd*rad,y,obj_solid)) ||
            ((dir == 90 || dir == 270) &amp;&amp; (yd != -dsin(dir)) &amp;&amp; place_meeting(x,y-yd*rad,obj_solid) &amp;&amp; !place_meeting(x,y+yd*rad,obj_solid))
        ) dir = (dir + 180) % 360;
    }*/
} else if (wallhit==noone &amp;&amp; abletosee &amp;&amp; distance_to_object(obj_player)&gt;16 &amp;&amp; !playerfound.washit) {
    move_towards_point(obj_player.x, obj_player.y, spd);
    follow = true;
} else {
    follow = false;
    speed = spd;
    direction = floor(direction / 90) * 90;
    if (canrot &amp;&amp; irandom(99)&lt;5) {
        direction += 90*(1+irandom(2));
        canrot = false;
        alarm[3] = room_speed;
    }
}
if (rotate) {
    image_angle = direction;
} else {
    image_xscale = sign(dcos(direction));
    if (image_xscale==0) image_xscale = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_highsolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_weaponhit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!washit) {
    var dmg = other.atk - def;
    chp -= clamp(dmg, 0, chp);
    if (dmg &lt;= 0) {
        with(instance_create(x,y-16,obj_popup)) {
            str = "No damage";
        }
    }
    targeted = id;
    washit = true;
    stop = true;
    image_alpha = 0.6;
    alarm[1] = room_speed;
    alarm[2] = room_speed&gt;&gt;1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
/*if (follow) draw_set_color(c_red);
else draw_set_color(c_black);
draw_line(x,y,obj_player.x,obj_player.y);*/
if (chp &lt; mhp) {
    draw_set_color(c_black);
    draw_rectangle(x-8,y-12,x+8,y-8,0);
    if (chp &gt; 0) {
        draw_set_color(c_green);
        draw_rectangle(x-7,y-11,x-7+((chp/mhp)*14),y-9,0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
