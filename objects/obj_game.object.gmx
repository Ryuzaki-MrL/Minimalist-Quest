<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>obj_hud</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pause = false;
py = 49;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar transition, section_index, section_x, section_y, section_w, section_h, section_x2, section_y2;
globalvar weapon_level, inventory, chests, events, maps, gates, triggers;
globalvar checkpoint, keys, weapon, item, curhp, maxhp, friends, skill;
globalvar cutscene, pause, targeted;

if (!savedata_load()) savedata_init();
//savedata_init();

table_item_init();

randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_rectangle(0,0,320,48,0);
draw_set_color(c_black);
draw_rectangle(0,0,319,48,1);
/*
draw_set_font(fntSmall);
if (instance_exists(targeted)) {
    draw_sprite(targeted.sprite_index,0,144+8,32+8);
    draw_text(144+16,32,targeted.name);
}
*/
draw_set_font(fntDefault);
draw_text(1,0,
    "Floor " + string(room+1) + "#"+
    "HP: [" + string_repeat("|", curhp) +
    string_repeat("'", maxhp - curhp) + "]"
);
for (var i = 0; i &lt; keys &amp;&amp; i &lt; 8; ++i) {
    draw_sprite(spr_key, 0, i&lt;&lt;4, 32);
}
for (var i = 0; i &lt; 4; ++i) {
    if ((friends &gt;&gt; i) &amp; 1) draw_sprite(spr_player, i, 240 + (i&lt;&lt;4) + 8, 32 + 8);
}
draw_text(144,0,"Weapon");
draw_rectangle(144,14,161,31,1);
draw_sprite(spr_weapons,weapon,145,15);
draw_text(164,16,"Lv." + string(weapon_level[weapon]));
draw_text(240,0,"Item");
draw_rectangle(240,14,257,31,1);
draw_sprite(spr_items,item,241,15);
draw_text(260,16,"x" + string(inventory[item]));
if (pause || py &gt; 49) {
    draw_set_color(c_white);
    draw_rectangle(1,49,318,py,0);
    draw_set_color(c_black);
    draw_rectangle(0,48,319,287,1);
    if (!pause) {
        py -= 28;
    } else if (py &lt; 287) {
        py += 28;
    } else {
        draw_set_halign(fa_center);
        draw_text(160,52,"[SHIFT] Sel.weapon  [CTRL] Sel.item#[A] Action  [X] Attack  [C] Use item");
        draw_rectangle(32,38+48,288,230+48,1);
        draw_set_valign(fa_middle);
        if (!maps[room]) {
            draw_text(160,134+48,"You don't have the#map for this floor.");
        } else {
            draw_sprite(spr_maps, room, 33, 39+48);
            draw_set_color(c_red);
            draw_set_alpha(0.3);
            with(obj_sectionarea) {
                if (visited) {
                    var rx = 33+(x div 320)*16, ry = 39+48+((y-816) div 240)*12;
                    draw_rectangle(rx, ry, rx+((image_xscale * 32) div 20), ry+((48 + image_yscale * 24) div 24), 0);
                }
            }
            draw_set_alpha(1.0);
            draw_sprite_ext(spr_player, 0, 8+33+((obj_player.x div 320) * 16), 6+39+48+(((obj_player.y-1008) div 240) * 12), 0.5, 0.5, 0, c_white, 1);
        }
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="121">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// minimap_generate();
// dump_spritedata();
dump_tilemap();
dump_objdata();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="120">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>screen_save("screen_"+string(date_current_datetime())+".png");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>savedata_init();
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>savedata_load();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
